name: Docker Image Build and Push with Auto Tagging

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: registry.cn-hangzhou.aliyuncs.com
  NAMESPACE: hanxuning
  IMAGE_NAME: test

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取所有历史记录，以便查找标签

      - name: Get the latest tag
        id: get-latest-tag
        run: |
          latest_tag=$(git tag --sort=-creatordate | head -n 1)
          if [ -z "$latest_tag" ]; then
            next_tag="v1"
          else
            version_number=$(echo $latest_tag | sed 's/^v//')
            next_version_number=$((version_number + 1))
            next_tag="v$next_version_number"
          fi
          echo "next_tag=$next_tag" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.get-latest-tag.outputs.next_tag }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./docker/test1
          file: ./docker/test1/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create new Git tag
        run: |
          git tag ${{ steps.get-latest-tag.outputs.next_tag }}
          git push origin ${{ steps.get-latest-tag.outputs.next_tag }}
