name: Docker Image Build and Push  # 工作流名称

on:
  push:
    branches: [ main ]  # 当代码 push 到 main 分支时触发
    tags: [ 'v*.*.*' ]  # 当创建版本标签时触发
  pull_request:
    branches: [ main ]  # 当有 PR 合并到 main 分支时触发

env:
  REGISTRY: registry.cn-hangzhou.aliyuncs.com  # 镜像仓库地址（阿里云）
  NAMESPACE: hanxuning  # 镜像命名空间
  IMAGE_NAME: ai_test  # 镜像名称

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository  # 拉取代码
        uses: actions/checkout@v4

      - name: Set up Docker Buildx  # 设置 Docker Buildx，支持多平台构建
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry  # 登录阿里云镜像仓库
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker  # 生成 Docker 镜像的 tags 和 labels
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=ref,event=branch
            type=ref,event=tag
            latest

      - name: Debug metadata  # 输出 tags 以便调试
        run: echo "Generated tags: ${{ steps.meta.outputs.tags }}"

      - name: Build and push Docker image  # 构建并推送 Docker 镜像
        uses: docker/build-push-action@v5
        with:
          context: .  # 构建上下文，指定当前目录
          file: ./docker/Dockerfile  # 指定 Dockerfile 路径
          push: true  # 允许推送到镜像仓库
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha  # 使用 GitHub Actions 缓存加速构建
          cache-to: type=gha,mode=max
