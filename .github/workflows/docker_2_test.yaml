name: Docker Image Build and Push

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: registry.cn-hangzhou.aliyuncs.com
  NAMESPACE: hanxuning
  IMAGE_NAME: ai_test

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

      - name: Get version tag (only v1.0.0 or latest)
        id: get-tag
        run: |
          # 获取当前 Git 标签，如果没有则设定为 v1.0.0
          current_tag=$(git tag --sort=-creatordate | head -n 1)
          if [ -z "$current_tag" ]; then
            current_tag="v1.0.0"  # 默认版本
          fi
          echo "current_tag=${current_tag}" >> $GITHUB_ENV  # 设置环境变量

      - name: Debug version tag
        run: |
          echo "Using version tag: $current_tag"  # 使用 shell 直接访问环境变量

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.current_tag }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./docker  # 这里是当前目录，指向项目根目录
          push: true
          file: ./docker/Dockerfile  # 确保这里的路径指向正确的 Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      # 只保留一个版本，删除其他不需要的标签
      - name: Clean up old tags
        run: |
          # 删除除了当前版本外的标签
          docker rmi ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:latest || true
          docker rmi ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:other_version_tag || true
