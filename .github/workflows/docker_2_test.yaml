name: Docker Image Build and Push

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: registry.cn-hangzhou.aliyuncs.com
  NAMESPACE: hanxuning
  IMAGE_NAME: ai_test

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 获取代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 登录容器镜像仓库
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

      # 获取最新的 Git 标签（假设我们只保留 v1.0.0 这种格式）
      - name: Get latest tag
        id: get-latest-tag
        run: |
          latest_tag=$(git tag --sort=-creatordate | head -n 1)
          if [ -z "$latest_tag" ]; then
            latest_tag="v1.0.0"  # 如果没有标签，则默认使用 v1.0.0
          fi
          echo "latest_tag=${latest_tag}" >> $GITHUB_ENV

      # 构建并推送镜像，只打一个版本标签
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ env.latest_tag }}  # 只打一个标签
          labels: ${{ steps.meta.outputs.labels }}

      # 删除远程仓库的重复标签
      - name: Delete old tags from the remote registry
        run: |
          current_tag="${{ env.latest_tag }}"
          # 获取所有镜像标签并删除重复标签
          echo "Cleaning up old tags for image: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}"

          # 获取现有标签列表并删除与当前标签不同的标签
          tags=$(curl -s -u "${{ secrets.ALIYUN_REGISTRY_USERNAME }}:${{ secrets.ALIYUN_REGISTRY_PASSWORD }}" \
            "https://${{ env.REGISTRY }}/v2/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}/tags/list" \
            | jq -r '.tags[]')

          for tag in $tags; do
            if [ "$tag" != "$current_tag" ]; then
              # 删除其他标签
              echo "Deleting tag $tag"
              manifest_digest=$(curl -s -u "${{ secrets.ALIYUN_REGISTRY_USERNAME }}:${{ secrets.ALIYUN_REGISTRY_PASSWORD }}" \
                "https://${{ env.REGISTRY }}/v2/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}/manifests/$tag" \
                | jq -r '.config.digest')
              curl -s -u "${{ secrets.ALIYUN_REGISTRY_USERNAME }}:${{ secrets.ALIYUN_REGISTRY_PASSWORD }}" \
                -X DELETE "https://${{ env.REGISTRY }}/v2/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}/manifests/$manifest_digest"
            fi
          done
